<?php
class TaskManager {
    private $mysqli;

    public function __construct($servername, $username, $password, $database) {
        // Create a new MySQLi instance
        $this->mysqli = new mysqli($servername, $username, $password, $database);

        // Check connection
        if ($this->mysqli->connect_error) {
            die("Connection failed: " . $this->mysqli->connect_error);
        }
    }

    public function createTask($taskName, $taskDescription) {
        // Prepare the INSERT statement
        $stmt = $this->mysqli->prepare("INSERT INTO tasks (name, description) VALUES (?, ?)");
        $stmt->bind_param("ss", $taskName, $taskDescription);

        // Execute the statement
        if ($stmt->execute()) {
            echo "Task created successfully.";
        } else {
            echo "Error creating task: " . $stmt->error;
        }

        $stmt->close();
    }

    public function listTasks() {
        // Prepare the SELECT statement
        $stmt = $this->mysqli->prepare("SELECT id, name, description FROM tasks");
        $stmt->execute();
        $result = $stmt->get_result();

        while ($row = $result->fetch_assoc()) {
            echo "Task ID: " . $row['id'] . "<br>";
            echo "Task Name: " . $row['name'] . "<br>";
            echo "Task Description: " . $row['description'] . "<br><br>";
        }

        $stmt->close();
    }

    public function updateTask($taskId, $newTaskName, $newTaskDescription) {
        // Prepare the UPDATE statement
        $stmt = $this->mysqli->prepare("UPDATE tasks SET name = ?, description = ? WHERE id = ?");
        $stmt->bind_param("ssi", $newTaskName, $newTaskDescription, $taskId);

        // Execute the statement
        if ($stmt->execute()) {
            echo "Task updated successfully.";
        } else {
            echo "Error updating task: " . $stmt->error;
        }

        $stmt->close();
    }

    public function deleteTask($taskId) {
        // Prepare the DELETE statement
        $stmt = $this->mysqli->prepare("DELETE FROM tasks WHERE id = ?");
        $stmt->bind_param("i", $taskId);

        // Execute the statement
        if ($stmt->execute()) {
            echo "Task deleted successfully.";
        } else {
            echo "Error deleting task: " . $stmt->error;
        }

        $stmt->close();
    }

    public function __destruct() {
        // Close the database connection
        $this->mysqli->close();
    }
}

// Usage example
$taskManager = new TaskManager("localhost", "your_username", "your_password", "your_database");

// Create a task
$taskManager->createTask("Task 1", "This is task 1.");

// List all tasks
$taskManager->listTasks();

// Update a task
$taskManager->updateTask(1, "Updated Task 1", "This is the updated task 1.");

// Delete a task
$taskManager->deleteTask(1);
?>
